<Application
    x:Class="BrushOverridingPOC.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:coreComponents="using:Core.Utils"
    xmlns:local="using:BrushOverridingPOC">

    <Application.Resources>
        <ResourceDictionary>
            <!--
                Here we're using a custom wrapper called ZThemeColor to store two different values for the color in light and dark theme.
                XAML doesn't let us assign values to a color object once it's created, so this is done as a hacky workaround.
            -->
            <coreComponents:ZThemeColor
                x:Key="ZAccentColorLow"
                ColorDark="DeepSkyBlue"
                ColorLight="DeepPink" />

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ms-appx:///Core/Themes/Generic.xaml" />
                <!--  If we're going to override common brushes, we have to do it in this merged dictionaries collection and override them right below it  -->
                <ResourceDictionary>
                    <ResourceDictionary.ThemeDictionaries>
                        <ResourceDictionary x:Key="Light">
                            <Color x:Key="ZFGColor">PaleGoldenRod</Color>
                        </ResourceDictionary>
                        <ResourceDictionary x:Key="Dark">
                            <Color x:Key="ZFGColor">GoldenRod</Color>
                        </ResourceDictionary>
                    </ResourceDictionary.ThemeDictionaries>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <!--<coreComponents:ZThemeColor x:Key="ZAccentColorLow" Color="DeepPink" />-->
            <!--<SolidColorBrush x:Key="ZAccentColorBrush" Color="{Binding Color, Source={ThemeResource ZAccentColorLow}, Mode=OneWay}" />-->
        </ResourceDictionary>
    </Application.Resources>
</Application>
